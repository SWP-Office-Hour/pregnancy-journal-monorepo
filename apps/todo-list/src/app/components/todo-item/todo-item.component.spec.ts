import { ComponentFixture, TestBed } from '@angular/core/testing';

import { Todo } from '../../model/todo.type';
import { TodoItemComponent } from './todo-item.component';

describe('TodoItemComponent', () => {
  let component: TodoItemComponent;
  let fixture: ComponentFixture<TodoItemComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [TodoItemComponent],
    }).compileComponents();

    fixture = TestBed.createComponent(TodoItemComponent);
    component = fixture.componentInstance;
    fixture.componentRef.setInput('todo', {
      id: 1,
      title: 'Test todo',
      completed: false,
      userId: 1,
    });
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

// Generated by Qodo Gen

describe('TodoItemComponent', () => {
  // Component initializes with valid Todo input
  it('should initialize with valid todo input when todo is provided', () => {
    const validTodo: Todo = {
      id: 1,
      title: 'Test todo',
      completed: false,
      userId: 1,
    };
    const fixture = TestBed.createComponent(TodoItemComponent);
    const component = fixture.componentInstance;
    fixture.componentRef.setInput('todo', validTodo);
    fixture.detectChanges();

    expect(component.todo()).toEqual(validTodo);
  });

  // Handle undefined/null todo input
  it('should throw error when todo input is undefined', () => {
    const fixture = TestBed.createComponent(TodoItemComponent);

    fixture.componentRef.setInput('todo', undefined);

    expect(() => fixture.detectChanges()).toThrowError();
  });
});
