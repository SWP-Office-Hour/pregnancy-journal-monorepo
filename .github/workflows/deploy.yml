name: DEPLOY FROM MAIN

on:
  push:
    branches:
      - main
permissions:
  contents: read
  packages: write

env:
  HUSKY: 0
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules????
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'



      - name: Cache node modules of entire Monorepo
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies without break package-lock
        run: npm i --legacy-peer-deps

#      - run: npx cypress install

      - uses: nrwl/nx-set-shas@v4
      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
#      - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # When you enable task distribution, run the e2e-ci task instead of e2e
#      - run: npx nx affected -t lint test build e2e
      ### Deploy by image
      - name: Log in to the Container registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3.3.0
        with:
          registry: registry.digitalocean.com/office-hour
          username: ${{ secrets.DIOCEAN_USERNAME }}
          password: ${{ secrets.DIOCEAN_AC }}

      - id: string
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}

      - name: 'Build images'
        run: INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=container

      - name: Build and push Docker image
        if: github.event_name == 'push'
        id: push
        uses: docker/build-push-action@v6.5.0
        with:
          context: .
          push: true
          tags: registry.digitalocean.com/office-hour/${{ steps.string.outputs.lowercase }}:latest
