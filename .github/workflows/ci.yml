name: CI

on:
  pull_request:
    types: [synchronize, opened, reopened, edited]

permissions:
  id-token: write
  contents: read
  actions: read

env:
  HUSKY: 0
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NX_POWERPACK_LICENSE: ${{ secrets.NX_POWERPACK_LICENSE }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  main-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check pnpm standalone
        uses: actions/cache@v4
        with:
          path: /home/runner/setup-pnpm/node_modules/.bin/pnpm
          key: ${{ runner.os }}-pnpm-standalone
          restore-keys: |
            ${{ runner.os }}-pnpm-standalone

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
          standalone: false

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # - name: which pnpm
      #   shell: bash
      #   run: |
      #     which pnpm
      #   env:
      #     TEST_TEST: ${{ steps.pnpmahihi.outputs.bin_dest }}

      # - name: echo echo $PNPM_HOME
      #   shell: bash
      #   run: |
      #     echo $PNPM_HOME

      # - name: echo pnpm store directory
      #   shell: bash
      #   run: |
      #     pnpm store path

      # - name: Get pnpm store directory
      #   shell: bash
      #   run: |
      #     echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm node_module cache
        uses: actions/cache@v4
        with:
          path: /home/runner/setup-pnpm/node_modules/.bin/store/v3
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4

      - name: Echo NX_BASE and NX_HEAD
        run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"

      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # When you enable task distribution, run the e2e-ci task instead of e2e
      #      - run: pnpm dlx cypress install
      #      - run: pnpm dlx nx affected -t lint test build e2e

      #      - id: nx-format-check
      #        run: pnpm dlx nx format:check
      - id: nx-affected
        run: pnpm dlx nx affected -t lint build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ steps.nx-affected.outcome == 'failure' }}
        run: exit 1
